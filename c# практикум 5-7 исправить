//Использование базовых алгоритмов при разработке методов
//7. Разработать метод, который для заданного натурального числа N возвращает сумму четных цифр в числе.
//С помощью данного метода:
//a) для каждого целого числа на отрезке[a, b] вывести на экран сумму четных цифр в числе;
//b) вывести на экран только те целые числа отрезка[a, b], для которых сумма четных цифр в числекратна 3;
//c) вывести на экран только те целые числа отрезка[a, b], для которых сумма четных цифр является простым числом;
//d) для заданного числа А вывести на экран ближайшее следующее за ним число, сумма четных цифр в котором равно В.

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace practicum5_2_7_
{
    class Program
    {
        static int Func(int n) //дополнительный метод
        {
            int s = 0;

            while (n != 0)
            {
                if (n % 2 == 0)
                {
                    s += n % 10;
                }
                n /= 10;
            }
            return s;
        }

        static void Main()
        {
            Console.Write("n = ");
            int n = int.Parse(Console.ReadLine());
            //int sum = Func(n);
            Console.WriteLine("sum = {0}", Func(n));

            //a) для каждого целого числа на отрезке[a, b] вывести на экран сумму четных цифр в числе;
            Console.Write("a = ");
            int a = int.Parse(Console.ReadLine());
            Console.Write("b = ");
            int b = int.Parse(Console.ReadLine());
            Console.WriteLine("a)");
            for (int i = a; i <= b; i++)
            {

                Console.WriteLine(i + " " + Func(i));
            }

            //b) вывести на экран только те целые числа отрезка[a, b], для которых сумма четных цифр в числекратна 3;
            Console.WriteLine("b)");
            for (int i = a; i <= b; i++)
            {
                if (Func(i) % 3 == 0)
                {
                    Console.WriteLine(i + " " + Func(i));
                }
            }

            //c) вывести на экран только те целые числа отрезка[a, b], для которых сумма четных цифр является простым числом;
            Console.WriteLine("c)");
           
            for (int i = a; i <= b; i++)
            {
                int k = 0;
                int c = Func(i);
                for (int j = 2; j < i; j++)
                {
                    if (c % j == 0)
                    {
                        k += 1;
                        if(k > 0)
                        {
                            break;
                        }
                    }
                }
                if (k == 0)
                {
                    Console.WriteLine(i);
                }
            }

            //d) для заданного числа А вывести на экран ближайшее следующее за ним число, сумма четных цифр в котором равно В.
            Console.WriteLine("d)");
            Console.Write("A = ");
            int A = int.Parse(Console.ReadLine());
            Console.Write("B = ");
            int B = int.Parse(Console.ReadLine());
            int h = A;
            
            while (Func(h) != B)
            {
                while(A !=0)
                {
                    if (h % 2 == 0)
                    {
                        while (A % 10 < 9)
                        {
                            h += 2;
                        }
                    }
                    else
                    {
                        h += 1;
                        while (A % 10 < 9)
                        {
                            h += 2;
                        }
                    }
                    A = A % 10;
                    h = h * 10;
                    if (Func(h) == B)
                    {
                        break;
                    }
                }

            }
            Console.WriteLine(h);
            
        }
    }
}
