#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

struct Point {
	int x, y;
};

bool is_on_diagonal(const Point& p) {
	return p.x == p.y || p.x == -p.y;
}

void remove_diagonal_points(vector<Point>& points) {
	auto it = remove_if(points.begin(), points.end(), is_on_diagonal);
	points.erase(it, points.end());
}

int main() {
	vector<Point> points = { {0,0}, {1,1}, {2,-2}, {-3,3}, {4,5}, {6,-6} };

	//cout << "Before removing diagonal points:" << endl;
	for (const Point& p : points) {
		cout << "(" << p.x << "," << p.y << ") ";
	}
	cout << endl;

	remove_diagonal_points(points);

	//cout << "After removing diagonal points:" << endl;
	for (const Point& p : points) {
		cout << "(" << p.x << "," << p.y << ") ";
	}
	cout << endl;

	return 0;
